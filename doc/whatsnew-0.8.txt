=========================
What's New in Roundup 0.8
=========================

For those completely new to Roundup, you might want to look over the very
terse features__ page.

__ features.html

.. contents::

Logging of internal messages
============================

Roundup's previously ad-hoc logging of events has been cleaned up and is
now configured in a single place in the tracker configuration file.

The `customisation documentation`_ has more details on how this is
configured.


Security Changes
================

Password Storage
----------------

Added MD5 scheme for password hiding. This extends the existing SHA and
crypt methods and is useful if you have an existing MD5 password database.


Permission Definitions
----------------------

Permissions may now be defined on a per-property basis, allowing access to
only specific properties on items. 

Permissions may also have code attached which is executed to check whether
the Permission is valid for the current user and item.


Extending Roundup
=================

To write extension code for Roundup you place a file in the tracker home
``extensions`` directory. See the `customisation documentation`_ for more
information about how this is done.


8-bit character set support in Web interface
============================================

This is used to override the UTF-8 default. It may be overridden in both
forms and a browser cookie.

- In forms, use the ``@charset`` variable.
- To use the cookie override, have the ``roundup_charset`` cookie set.

In both cases, the value is a valid charset name (eg. ``utf-8`` or
``kio8-r``).

Inside Roundup, all strings are stored and processed in utf-8.
Unfortunately, some older browsers do not work properly with
utf8-encoded pages (e.g. Netscape Navigator 4 displays wrong
characters in form fields).  This version allows to change
the character set for http transfers.  To do so, you may add
the following code to your ``page.html`` template::

 <tal:block define="uri string:${request/base}${request/env/PATH_INFO}">
  <a tal:attributes="href python:request.indexargs_href(uri,
   {'@charset':'utf-8'})">utf-8</a>
  <a tal:attributes="href python:request.indexargs_href(uri,
   {'@charset':'koi8-r'})">koi8-r</a>
 </tal:block>

(substitute ``koi8-r`` with appropriate charset for your language).
Charset preference is kept in the browser cookie ``roundup_charset``.

Lines ``meta http-equiv`` added to the tracker templates in version 0.6.0
should be changed to include actual character set name::

 <meta http-equiv="Content-Type"
  tal:attributes="content string:text/html;; charset=${request/client/charset}"
 />

Actual charset is also sent in the http header.


Web Interface Miscellanea
=========================

The web interface has seen some changes:

XXX this section needs more detail

Templating
  We implement __nonzero__ for HTMLProperty - properties may now be used in
  boolean conditions (eg ``tal:condition="issue/nosy"`` will be false if
  the nosy list is empty).

  We added a default argument to the DateHTMLProperty.field method, and an
  optional Interval (string or object) to the DateHTMLProperty.now

  We've added a multiple selection Link/Multilink search field macro to the
  default classic page.html template.

  We relaxed hyperlinking in web interface (accept "issue123" or "Issue 123")

  The listing popup may be used in query forms.


Standard templates
  We hide "(list)" popup links when issue is only viewable

Web server
  The builtin web server may now perform HTTP Basic Authentication by
  itself.

.. _`customisation documentation`: customizing.html
