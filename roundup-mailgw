#! /usr/bin/python
#
# Copyright (c) 2001 Bizar Software Pty Ltd (http://www.bizarsoftware.com.au/)
# This module is free software, and you may redistribute it and/or modify
# under the same terms as Python, so long as this copyright message and
# disclaimer are retained in their original form.
#
# IN NO EVENT SHALL BIZAR SOFTWARE PTY LTD BE LIABLE TO ANY PARTY FOR
# DIRECT, INDIRECT, SPECIAL, INCIDENTAL, OR CONSEQUENTIAL DAMAGES ARISING
# OUT OF THE USE OF THIS CODE, EVEN IF THE AUTHOR HAS BEEN ADVISED OF THE
# POSSIBILITY OF SUCH DAMAGE.
#
# BIZAR SOFTWARE PTY LTD SPECIFICALLY DISCLAIMS ANY WARRANTIES, INCLUDING,
# BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS
# FOR A PARTICULAR PURPOSE.  THE CODE PROVIDED HEREUNDER IS ON AN "AS IS"
# BASIS, AND THERE IS NO OBLIGATION WHATSOEVER TO PROVIDE MAINTENANCE,
# SUPPORT, UPDATES, ENHANCEMENTS, OR MODIFICATIONS.
# 
# $Id: roundup-mailgw,v 1.10 2001-11-07 05:30:11 richard Exp $

import sys
if int(sys.version[0]) < 2:
    print "Roundup requires Python 2.0 or newer."
    sys.exit(1)

# figure the instance home
import os
if len(sys.argv) > 1:
    instance_home = sys.argv[1]
else:
    instance_home = os.environ.get('ROUNDUP_INSTANCE', '')
if not instance_home:
    print 'Usage: %s <instance home> [mail spool file]'%sys.argv[0]
    sys.exit(1)

# get the instance
import roundup.instance
instance = roundup.instance.open(instance_home)

# invoke the mail handler
db = instance.open('admin')
handler = instance.MailGW(db)

# if there's no more arguments, read a single message from stdin
if len(sys.argv) < 2:
    handler.main(sys.stdin)

# otherwise, there's a spool file to read from
import fcntl, FCNTL
spool_file = sys.argv[2]

# open the spool file and lock it
f = open(spool_file, 'r+')
fcntl.flock(f.fileno(), FCNTL.LOCK_EX)

# handle and clear the mailbox
try:
    from mailbox import UnixMailbox
    import mimetools
    mailbox = UnixMailbox(f, factory=mimetools.Message)
    # grab one message
    message = mailbox.next()
    while message:
        # call the instance mail handler
        handler.handle_Message(message)
        message = mailbox.next()
    # nuke the file contents
    os.ftruncate(f.fileno(), 0)
except:
    import traceback
    traceback.print_exc()
fcntl.flock(f.fileno(), FCNTL.LOCK_UN)

#
# $Log: not supported by cvs2svn $
# Revision 1.9  2001/11/07 05:29:26  richard
# Modified roundup-mailgw so it can read e-mails from a local mail spool
# file. Truncates the spool file after parsing.
# Fixed a couple of small bugs introduced in roundup.mailgw when I started
# the popgw.
#
# Revision 1.8  2001/11/01 22:04:37  richard
# Started work on supporting a pop3-fetching server
# Fixed bugs:
#  . bug #477104 ] HTML tag error in roundup-server
#  . bug #477107 ] HTTP header problem
#
# Revision 1.7  2001/08/07 00:24:42  richard
# stupid typo
#
# Revision 1.6  2001/08/07 00:15:51  richard
# Added the copyright/license notice to (nearly) all files at request of
# Bizar Software.
#
# Revision 1.5  2001/08/05 07:44:25  richard
# Instances are now opened by a special function that generates a unique
# module name for the instances on import time.
#
# Revision 1.4  2001/08/03 01:28:33  richard
# Used the much nicer load_package, pointed out by Steve Majewski.
#
# Revision 1.3  2001/08/03 00:59:34  richard
# Instance import now imports the instance using imp.load_module so that
# we can have instance homes of "roundup" or other existing python package
# names.
#
# Revision 1.2  2001/07/29 07:01:39  richard
# Added vim command to all source so that we don't get no steenkin' tabs :)
#
# Revision 1.1  2001/07/23 03:46:48  richard
# moving the bin files to facilitate out-of-the-boxness
#
# Revision 1.1  2001/07/22 11:15:45  richard
# More Grande Splite stuff
#
#
# vim: set filetype=python ts=4 sw=4 et si
